[
  {
    "objectID": "model.html",
    "href": "model.html",
    "title": "Model",
    "section": "",
    "text": "Code\nfrom palmerpenguins import penguins\nfrom pandas import get_dummies\nimport pandas as pd\nimport numpy as np\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import preprocessing\n\nfrom vetiver import VetiverModel\nfrom vetiver import VetiverAPI\n\nimport pins\nfrom vetiver import vetiver_pin_write\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\nimport numpy as np\n\nfrom sklearn.tree import DecisionTreeRegressor\n\nimport duckdb"
  },
  {
    "objectID": "model.html#get-data",
    "href": "model.html#get-data",
    "title": "Model",
    "section": "Get Data",
    "text": "Get Data\n\n\nCode\ncon = duckdb.connect('my-db.duckdb')\ndf = con.execute(\"SELECT * FROM penguins\").fetchdf().dropna()\ncon.close()"
  },
  {
    "objectID": "model.html#define-model-and-fit",
    "href": "model.html#define-model-and-fit",
    "title": "Model",
    "section": "Define Model and Fit",
    "text": "Define Model and Fit\n\n\nCode\nX = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)\ny = df['body_mass_g']\n\nmodel = LinearRegression().fit(X, y)"
  },
  {
    "objectID": "model.html#get-some-information",
    "href": "model.html#get-some-information",
    "title": "Model",
    "section": "Get some information",
    "text": "Get some information\n\n\nCode\nprint(f\"R^2 {model.score(X,y)}\")\nprint(f\"Intercept {model.intercept_}\")\nprint(f\"Columns {X.columns}\")\nprint(f\"Coefficients {model.coef_}\")\n\ny_pred = model.predict(X)\n\nrmse = np.sqrt(mean_squared_error(y, y_pred))\n\nprint(f\"RMSE: {rmse}\")\n\n\nR^2 0.8555368759537614\nIntercept 2169.2697209393973\nColumns Index(['bill_length_mm', 'species_Chinstrap', 'species_Gentoo', 'sex_male'], dtype='object')\nCoefficients [  32.53688677 -298.76553447 1094.86739145  547.36692408]\nRMSE: 305.5889986471743"
  },
  {
    "objectID": "model.html#what-if-we-tried-some-other-models",
    "href": "model.html#what-if-we-tried-some-other-models",
    "title": "Model",
    "section": "What if we tried some other models?",
    "text": "What if we tried some other models?\n\n\nCode\n# Assuming you have a dataset `X` for features and `y` for the target variable\n\n# Step 1: Split the data\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# Step 2: Train the model\n# Let's improve his model. This isn't some elementary 377 class where we train on all our data\n# We're not animals\nmodel1 = LinearRegression()\nmodel1.fit(X_train, y_train)\n\n# Step 3: Make predictions on the testing set\ny_pred1 = model1.predict(X_test)\n\n# Step 4: Calculate RMSE\nrmse = np.sqrt(mean_squared_error(y_test, y_pred1))\n\nprint(f\"RMSE: {rmse}\")\n\n\nRMSE: 310.2846345747236"
  },
  {
    "objectID": "eda.html",
    "href": "eda.html",
    "title": "Penguins EDA",
    "section": "",
    "text": "Code\n# Load the required packages\nlibrary(caret)\n\n\nLoading required package: ggplot2\n\n\nLoading required package: lattice\n\n\nCode\nlibrary(caret)\nlibrary(palmerpenguins)\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\nlibrary(ggplot2)\nlibrary(knitr)\n\n\nLet’s start by looking at the data.\n\n\nCode\ndf &lt;- palmerpenguins::penguins\nkable(head(df), caption = \"Preview of the Dataset\")\n\n\n\nPreview of the Dataset\n\n\n\n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\nAdelie\nTorgersen\n39.1\n18.7\n181\n3750\nmale\n2007\n\n\nAdelie\nTorgersen\n39.5\n17.4\n186\n3800\nfemale\n2007\n\n\nAdelie\nTorgersen\n40.3\n18.0\n195\n3250\nfemale\n2007\n\n\nAdelie\nTorgersen\nNA\nNA\nNA\nNA\nNA\n2007\n\n\nAdelie\nTorgersen\n36.7\n19.3\n193\n3450\nfemale\n2007\n\n\nAdelie\nTorgersen\n39.3\n20.6\n190\n3650\nmale\n2007\n\n\n\n\n\nWe can also examine the summary statistics of the dataset.\n\n\nCode\ndf %&gt;%\n  group_by(species, sex) %&gt;%\n  summarise(\n    across(\n      where(is.numeric), \n      \\(x) mean(x, na.rm = TRUE)\n      )\n    ) %&gt;%\n  knitr::kable(caption = \"Summary of the Dataset\")\n\n\n`summarise()` has grouped output by 'species'. You can override using the\n`.groups` argument.\n\n\n\nSummary of the Dataset\n\n\n\n\n\n\n\n\n\n\n\nspecies\nsex\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nyear\n\n\n\n\nAdelie\nfemale\n37.25753\n17.62192\n187.7945\n3368.836\n2008.055\n\n\nAdelie\nmale\n40.39041\n19.07260\n192.4110\n4043.493\n2008.055\n\n\nAdelie\nNA\n37.84000\n18.32000\n185.6000\n3540.000\n2007.000\n\n\nChinstrap\nfemale\n46.57353\n17.58824\n191.7353\n3527.206\n2007.971\n\n\nChinstrap\nmale\n51.09412\n19.25294\n199.9118\n3938.971\n2007.971\n\n\nGentoo\nfemale\n45.56379\n14.23793\n212.7069\n4679.741\n2008.069\n\n\nGentoo\nmale\n49.47377\n15.71803\n221.5410\n5484.836\n2008.066\n\n\nGentoo\nNA\n45.62500\n14.55000\n215.7500\n4587.500\n2008.400"
  },
  {
    "objectID": "eda.html#penguin-size-and-mass-by-sex-and-species",
    "href": "eda.html#penguin-size-and-mass-by-sex-and-species",
    "title": "Penguins EDA",
    "section": "",
    "text": "Code\n# Load the required packages\nlibrary(caret)\n\n\nLoading required package: ggplot2\n\n\nLoading required package: lattice\n\n\nCode\nlibrary(caret)\nlibrary(palmerpenguins)\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\nlibrary(ggplot2)\nlibrary(knitr)\n\n\nLet’s start by looking at the data.\n\n\nCode\ndf &lt;- palmerpenguins::penguins\nkable(head(df), caption = \"Preview of the Dataset\")\n\n\n\nPreview of the Dataset\n\n\n\n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\nAdelie\nTorgersen\n39.1\n18.7\n181\n3750\nmale\n2007\n\n\nAdelie\nTorgersen\n39.5\n17.4\n186\n3800\nfemale\n2007\n\n\nAdelie\nTorgersen\n40.3\n18.0\n195\n3250\nfemale\n2007\n\n\nAdelie\nTorgersen\nNA\nNA\nNA\nNA\nNA\n2007\n\n\nAdelie\nTorgersen\n36.7\n19.3\n193\n3450\nfemale\n2007\n\n\nAdelie\nTorgersen\n39.3\n20.6\n190\n3650\nmale\n2007\n\n\n\n\n\nWe can also examine the summary statistics of the dataset.\n\n\nCode\ndf %&gt;%\n  group_by(species, sex) %&gt;%\n  summarise(\n    across(\n      where(is.numeric), \n      \\(x) mean(x, na.rm = TRUE)\n      )\n    ) %&gt;%\n  knitr::kable(caption = \"Summary of the Dataset\")\n\n\n`summarise()` has grouped output by 'species'. You can override using the\n`.groups` argument.\n\n\n\nSummary of the Dataset\n\n\n\n\n\n\n\n\n\n\n\nspecies\nsex\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nyear\n\n\n\n\nAdelie\nfemale\n37.25753\n17.62192\n187.7945\n3368.836\n2008.055\n\n\nAdelie\nmale\n40.39041\n19.07260\n192.4110\n4043.493\n2008.055\n\n\nAdelie\nNA\n37.84000\n18.32000\n185.6000\n3540.000\n2007.000\n\n\nChinstrap\nfemale\n46.57353\n17.58824\n191.7353\n3527.206\n2007.971\n\n\nChinstrap\nmale\n51.09412\n19.25294\n199.9118\n3938.971\n2007.971\n\n\nGentoo\nfemale\n45.56379\n14.23793\n212.7069\n4679.741\n2008.069\n\n\nGentoo\nmale\n49.47377\n15.71803\n221.5410\n5484.836\n2008.066\n\n\nGentoo\nNA\n45.62500\n14.55000\n215.7500\n4587.500\n2008.400"
  },
  {
    "objectID": "eda.html#penguin-size-vs-mass-by-species",
    "href": "eda.html#penguin-size-vs-mass-by-species",
    "title": "Penguins EDA",
    "section": "Penguin Size vs Mass by Species",
    "text": "Penguin Size vs Mass by Species\nLet’s make some visuals to better understand the relationship between species, body mass and bill length.\n\n\nCode\ndf %&gt;%\n  ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() + \n  geom_smooth(method = \"lm\")\n\n\n\n\n\nThat’s very pretty. We also use python to perform similar exploration.For example, how clean is the dataset? Are there a lot of null or missing values?\n\n\nCode\nimport palmerpenguins\nimport pandas as pd\n\ndf = palmerpenguins.load_penguins()\ndf.info()\n\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 344 entries, 0 to 343\nData columns (total 8 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   species            344 non-null    object \n 1   island             344 non-null    object \n 2   bill_length_mm     342 non-null    float64\n 3   bill_depth_mm      342 non-null    float64\n 4   flipper_length_mm  342 non-null    float64\n 5   body_mass_g        342 non-null    float64\n 6   sex                333 non-null    object \n 7   year               344 non-null    int64  \ndtypes: float64(4), int64(1), object(3)\nmemory usage: 21.6+ KB\n\n\nThat’s a clean dataset! Let’s see what the species and island breakdowns are.\n\n\nCode\npd.DataFrame(df['species'].value_counts()).style.set_table_styles(\n    [{'selector': 'tr:hover',\n      'props': [('background-color', 'yellow')]},\n     {'selector': 'th',\n      'props': [('background-color', 'lightblue'),\n                ('color', 'white')]}]\n).set_caption(\"Penguin Counts by Species\")\n\n\n\n\n\nPenguin Counts by Species\n\n\n \ncount\n\n\nspecies\n \n\n\n\n\nAdelie\n152\n\n\nGentoo\n124\n\n\nChinstrap\n68\n\n\n\n\n\n\n\n\n\nCode\npd.DataFrame(df['island'].value_counts()).style.set_table_styles(\n    [{'selector': 'tr:hover',\n      'props': [('background-color', 'yellow')]},\n     {'selector': 'th',\n      'props': [('background-color', 'lightblue'),\n                ('color', 'white')]}]\n).set_caption(\"Penguin COunts by Island\")\n\n\n\n\n\nPenguin COunts by Island\n\n\n \ncount\n\n\nisland\n \n\n\n\n\nBiscoe\n168\n\n\nDream\n124\n\n\nTorgersen\n52\n\n\n\n\n\n\n\n\n\nCode\nggplot(data = penguins, aes(x = island, fill = species)) + \n  geom_bar(position = \"stack\") +\n  labs(title = \"Count of Penguin Species by Island\",\n       x = \"Island\",\n       y = \"Count\") +\n  theme_minimal()\n\n\n\n\n\nNeato! Now let’s see the same breakdown as before, but for island instead of population\n\n\nCode\ndf %&gt;%\n  ggplot(aes(x = bill_length_mm, y = body_mass_g, color = island)) +\n  geom_point() + \n  geom_smooth(method = \"lm\")\n\n\n\n\n\nInteresting. The effect seems less pronounced than for species. Additionally, the way the species are grouped across islands, this graph may just be capturing masked versions of the species’ effect on body mass and bill length. Let’s move on to modelling! By heading over to the model tab, you can step through the process of building and evaluating models."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This project is a practical application of DevOps principles within a data science context, following the “DevOps for Data Science” textbook. It involves exploratory data analysis (EDA), model building, and deployment using the Palmer Penguins dataset.\n\n\nThe initial phase involved conducting an EDA on the Palmer Penguins dataset to identify key variables and understand data distributions, providing insights into the data’s underlying patterns and relationships. The model tab of the website walks readers through the EDA process.\n\n\n\nSubsequently, a predictive model was developed to analyze the dataset, focusing on understanding the factors influencing penguin body mass. The modeling process included data preprocessing, feature selection, and model evaluation.\n\n\n\nThe final stage involved deploying the model through a Shiny app using the vetiver package. This deployment demonstrates the operationalization of the model, allowing for interactive user engagement and further exploration of the model’s predictive capabilities.\nThe project exemplifies the integration of data science and DevOps practices, showcasing the end-to-end process from data analysis to model deployment."
  },
  {
    "objectID": "about.html#exploratory-data-analysis",
    "href": "about.html#exploratory-data-analysis",
    "title": "About",
    "section": "",
    "text": "The initial phase involved conducting an EDA on the Palmer Penguins dataset to identify key variables and understand data distributions, providing insights into the data’s underlying patterns and relationships. The model tab of the website walks readers through the EDA process."
  },
  {
    "objectID": "about.html#model-development",
    "href": "about.html#model-development",
    "title": "About",
    "section": "",
    "text": "Subsequently, a predictive model was developed to analyze the dataset, focusing on understanding the factors influencing penguin body mass. The modeling process included data preprocessing, feature selection, and model evaluation."
  },
  {
    "objectID": "about.html#deployment-with-vetiver",
    "href": "about.html#deployment-with-vetiver",
    "title": "About",
    "section": "",
    "text": "The final stage involved deploying the model through a Shiny app using the vetiver package. This deployment demonstrates the operationalization of the model, allowing for interactive user engagement and further exploration of the model’s predictive capabilities.\nThe project exemplifies the integration of data science and DevOps practices, showcasing the end-to-end process from data analysis to model deployment."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "An Exploration of Palmer Penguins",
    "section": "",
    "text": "Explore the fascinating world of Palmer Penguins through data analysis and interactive modeling. If you’re not interested in that, then enjoy these cute penguin pictures!\n\n \n\n\n\nDelve into our exploratory data analysis and uncover intriguing patterns and relationships within the penguin data.\n\n\n\n\nWe also made an app based on our model! Unfortunately it is hosted locally, so you’ll need to to run it on your own machine to see it for yourself. You can download it from the repository here.\n\n\n\n\nFind out more about the project’s background, the data, and the methodologies on our About page.\nWe invite you to explore, interact, and gain insights from our data-driven journey with the Palmer Penguins."
  },
  {
    "objectID": "index.html#discover-insights",
    "href": "index.html#discover-insights",
    "title": "An Exploration of Palmer Penguins",
    "section": "",
    "text": "Delve into our exploratory data analysis and uncover intriguing patterns and relationships within the penguin data."
  },
  {
    "objectID": "index.html#interactive-modeling",
    "href": "index.html#interactive-modeling",
    "title": "An Exploration of Palmer Penguins",
    "section": "",
    "text": "We also made an app based on our model! Unfortunately it is hosted locally, so you’ll need to to run it on your own machine to see it for yourself. You can download it from the repository here."
  },
  {
    "objectID": "index.html#learn-more",
    "href": "index.html#learn-more",
    "title": "An Exploration of Palmer Penguins",
    "section": "",
    "text": "Find out more about the project’s background, the data, and the methodologies on our About page.\nWe invite you to explore, interact, and gain insights from our data-driven journey with the Palmer Penguins."
  }
]